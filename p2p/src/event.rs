//! Events generated by the peer-to-peer system.
use std::net;

use bitcoin::network::message::NetworkMessage;

use crate::protocol::PeerId;
use crate::protocol::{addrmgr, connmgr, spvmgr, syncmgr};

/// A peer-to-peer event.
#[derive(Debug)]
pub enum Event {
    /// The node is now listening for incoming connections.
    Listening(net::SocketAddr),
    /// Received a message from a peer.
    Received(PeerId, NetworkMessage),
    /// An address manager event.
    AddrManager(addrmgr::Event),
    /// A sync manager event.
    SyncManager(syncmgr::Event),
    /// A connection manager event.
    ConnManager(connmgr::Event),
    /// An SPV manager event.
    SpvManager(spvmgr::Event),
}
